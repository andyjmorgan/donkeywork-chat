// <auto-generated />
using System;
using System.Collections.Generic;
using DonkeyWork.Chat.Common.Models.Actions;
using DonkeyWork.Chat.Common.Models.Prompt;
using DonkeyWork.Chat.Common.Models.Providers.Tools;
using DonkeyWork.Chat.Common.Models.Streaming;
using DonkeyWork.Persistence.Agent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DonkeyWork.Persistence.Agent.Migrations
{
    [DbContext(typeof(AgentPersistenceContext))]
    partial class AgentPersistenceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AgentPersistenceContext")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Action.ActionEntity", b =>
                {
                    b.HasBaseType("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity");

                    b.Property<ActionModelConfiguration>("ActionModelConfiguration")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<List<ToolProviderApplicationType>>("AllowedTools")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Icon")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasIndex("Name", "UserId")
                        .IsUnique();

                    b.ToTable("Actions", "AgentPersistenceContext");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Action.ActionPromptRelationEntity", b =>
                {
                    b.HasBaseType("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActionPromptId")
                        .HasColumnType("uuid");

                    b.HasIndex("ActionId");

                    b.HasIndex("ActionPromptId");

                    b.ToTable("ActionPromptRelations", "AgentPersistenceContext");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Action.ActionSystemPromptRelationEntity", b =>
                {
                    b.HasBaseType("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemPromptId")
                        .HasColumnType("uuid");

                    b.HasIndex("ActionId");

                    b.HasIndex("SystemPromptId");

                    b.ToTable("ActionSystemPromptRelations", "AgentPersistenceContext");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.ActionExecution.ActionExecutionEntity", b =>
                {
                    b.HasBaseType("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uuid");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<BaseStreamItem>>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ExecutionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.ToTable("ActionExecutions", "AgentPersistenceContext");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Prompt.ActionPromptEntity", b =>
                {
                    b.HasBaseType("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("UsageCount")
                        .HasColumnType("integer");

                    b.Property<Dictionary<string, PromptVariable>>("Variables")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasIndex("Name", "UserId")
                        .IsUnique();

                    b.ToTable("ActionPrompts", "AgentPersistenceContext");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Prompt.SystemPromptEntity", b =>
                {
                    b.HasBaseType("DonkeyWork.Persistence.Common.Entity.Base.BaseUserEntity");

                    b.Property<List<string>>("Content")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("UsageCount")
                        .HasColumnType("integer");

                    b.HasIndex("Name", "UserId")
                        .IsUnique();

                    b.ToTable("SystemPrompts", "AgentPersistenceContext");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Action.ActionPromptRelationEntity", b =>
                {
                    b.HasOne("DonkeyWork.Persistence.Agent.Entity.Action.ActionEntity", "Action")
                        .WithMany("ActionPrompts")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonkeyWork.Persistence.Agent.Entity.Prompt.ActionPromptEntity", "ActionPrompt")
                        .WithMany()
                        .HasForeignKey("ActionPromptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("ActionPrompt");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Action.ActionSystemPromptRelationEntity", b =>
                {
                    b.HasOne("DonkeyWork.Persistence.Agent.Entity.Action.ActionEntity", "Action")
                        .WithMany("SystemPrompts")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonkeyWork.Persistence.Agent.Entity.Prompt.SystemPromptEntity", "SystemPrompt")
                        .WithMany()
                        .HasForeignKey("SystemPromptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("SystemPrompt");
                });

            modelBuilder.Entity("DonkeyWork.Persistence.Agent.Entity.Action.ActionEntity", b =>
                {
                    b.Navigation("ActionPrompts");

                    b.Navigation("SystemPrompts");
                });
#pragma warning restore 612, 618
        }
    }
}
