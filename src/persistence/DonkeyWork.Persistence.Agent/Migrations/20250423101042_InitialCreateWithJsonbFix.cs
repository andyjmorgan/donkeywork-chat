// <auto-generated />
using System;
using System.Collections.Generic;
using DonkeyWork.Chat.Common.Models.Actions;
using DonkeyWork.Chat.Common.Models.Prompt;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace DonkeyWork.Persistence.Agent.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreateWithJsonbFix : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "AgentPersistenceContext");

            migrationBuilder.CreateTable(
                name: "ActionPrompts",
                schema: "AgentPersistenceContext",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    Variables = table.Column<Dictionary<string, PromptVariable>>(type: "jsonb", nullable: false),
                    Messages = table.Column<string>(type: "jsonb", nullable: false),
                    Name = table.Column<string>(type: "character varying(128)", maxLength: 128, nullable: false),
                    Description = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: false),
                    UsageCount = table.Column<int>(type: "integer", nullable: false),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ActionPrompts", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Actions",
                schema: "AgentPersistenceContext",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: false),
                    Description = table.Column<string>(type: "character varying(512)", maxLength: 512, nullable: false),
                    Icon = table.Column<string>(type: "character varying(512)", maxLength: 512, nullable: true),
                    ActionModelConfiguration = table.Column<ModelConfiguration>(type: "jsonb", nullable: false),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Actions", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "SystemPrompts",
                schema: "AgentPersistenceContext",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    Content = table.Column<List<string>>(type: "jsonb", nullable: false),
                    Name = table.Column<string>(type: "character varying(128)", maxLength: 128, nullable: false),
                    Description = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: false),
                    UsageCount = table.Column<int>(type: "integer", nullable: false),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SystemPrompts", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ActionPromptRelations",
                schema: "AgentPersistenceContext",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    ActionPromptId = table.Column<Guid>(type: "uuid", nullable: false),
                    ActionId = table.Column<Guid>(type: "uuid", nullable: false),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ActionPromptRelations", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ActionPromptRelations_ActionPrompts_ActionPromptId",
                        column: x => x.ActionPromptId,
                        principalSchema: "AgentPersistenceContext",
                        principalTable: "ActionPrompts",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ActionPromptRelations_Actions_ActionId",
                        column: x => x.ActionId,
                        principalSchema: "AgentPersistenceContext",
                        principalTable: "Actions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ActionSystemPromptRelations",
                schema: "AgentPersistenceContext",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    SystemPromptId = table.Column<Guid>(type: "uuid", nullable: false),
                    ActionId = table.Column<Guid>(type: "uuid", nullable: false),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ActionSystemPromptRelations", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ActionSystemPromptRelations_Actions_ActionId",
                        column: x => x.ActionId,
                        principalSchema: "AgentPersistenceContext",
                        principalTable: "Actions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ActionSystemPromptRelations_SystemPrompts_SystemPromptId",
                        column: x => x.SystemPromptId,
                        principalSchema: "AgentPersistenceContext",
                        principalTable: "SystemPrompts",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "IX_ActionPromptRelations_ActionId",
                schema: "AgentPersistenceContext",
                table: "ActionPromptRelations",
                column: "ActionId");

            migrationBuilder.CreateIndex(
                name: "IX_ActionPromptRelations_ActionPromptId",
                schema: "AgentPersistenceContext",
                table: "ActionPromptRelations",
                column: "ActionPromptId");

            migrationBuilder.CreateIndex(
                name: "IX_ActionPrompts_Name_UserId",
                schema: "AgentPersistenceContext",
                table: "ActionPrompts",
                columns: new[] { "Name", "UserId" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Actions_Name_UserId",
                schema: "AgentPersistenceContext",
                table: "Actions",
                columns: new[] { "Name", "UserId" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ActionSystemPromptRelations_ActionId",
                schema: "AgentPersistenceContext",
                table: "ActionSystemPromptRelations",
                column: "ActionId");

            migrationBuilder.CreateIndex(
                name: "IX_ActionSystemPromptRelations_SystemPromptId",
                schema: "AgentPersistenceContext",
                table: "ActionSystemPromptRelations",
                column: "SystemPromptId");

            migrationBuilder.CreateIndex(
                name: "IX_SystemPrompts_Name_UserId",
                schema: "AgentPersistenceContext",
                table: "SystemPrompts",
                columns: new[] { "Name", "UserId" },
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ActionPromptRelations",
                schema: "AgentPersistenceContext");

            migrationBuilder.DropTable(
                name: "ActionSystemPromptRelations",
                schema: "AgentPersistenceContext");

            migrationBuilder.DropTable(
                name: "ActionPrompts",
                schema: "AgentPersistenceContext");

            migrationBuilder.DropTable(
                name: "Actions",
                schema: "AgentPersistenceContext");

            migrationBuilder.DropTable(
                name: "SystemPrompts",
                schema: "AgentPersistenceContext");
        }
    }
}
