// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace DonkeyWork.Chat.Persistence.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "BaseUserEntity",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    Discriminator = table.Column<string>(type: "character varying(34)", maxLength: 34, nullable: false),
                    Title = table.Column<string>(type: "character varying(64)", maxLength: 64, nullable: true),
                    MessageCount = table.Column<int>(type: "integer", nullable: true),
                    ConversationId = table.Column<Guid>(type: "uuid", nullable: true),
                    MessagePairId = table.Column<Guid>(type: "uuid", nullable: true),
                    MessageOwner = table.Column<int>(type: "integer", nullable: true),
                    Message = table.Column<string>(type: "text", nullable: true),
                    ToolCallEntity_ConversationId = table.Column<Guid>(type: "uuid", nullable: true),
                    ToolCallEntity_MessagePairId = table.Column<Guid>(type: "uuid", nullable: true),
                    ToolName = table.Column<string>(type: "character varying(128)", maxLength: 128, nullable: true),
                    Request = table.Column<string>(type: "text", nullable: true),
                    Response = table.Column<string>(type: "text", nullable: true),
                    CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BaseUserEntity", x => x.Id);
                    table.ForeignKey(
                        name: "FK_BaseUserEntity_BaseUserEntity_ConversationId",
                        column: x => x.ConversationId,
                        principalTable: "BaseUserEntity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_BaseUserEntity_BaseUserEntity_ToolCallEntity_ConversationId",
                        column: x => x.ToolCallEntity_ConversationId,
                        principalTable: "BaseUserEntity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_BaseUserEntity_ConversationId",
                table: "BaseUserEntity",
                column: "ConversationId");

            migrationBuilder.CreateIndex(
                name: "IX_BaseUserEntity_MessagePairId",
                table: "BaseUserEntity",
                column: "MessagePairId");

            migrationBuilder.CreateIndex(
                name: "IX_BaseUserEntity_ToolCallEntity_ConversationId",
                table: "BaseUserEntity",
                column: "ToolCallEntity_ConversationId");

            migrationBuilder.CreateIndex(
                name: "IX_BaseUserEntity_ToolCallEntity_MessagePairId",
                table: "BaseUserEntity",
                column: "ToolCallEntity_MessagePairId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "BaseUserEntity");
        }
    }
}
